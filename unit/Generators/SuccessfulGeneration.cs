// Copyright 2024 Cimpress plc
//
// Licensed under the Apache License, Version 2.0 (the "License") â€“
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

namespace Test;

[SuppressMessage("StyleCop.Readability", "SA1118", Justification = "Analyzer doesn't understand raw string literals.")]
public sealed class SuccessfulGeneration
    : TheoryData<string, string>
{
    public SuccessfulGeneration()
    {
        Add(/* lang=c#-test */
"""
using System;
using System.Threading;
using System.Threading.Tasks;
using Tiger.Stripes;

_ = ((IInvocationBuilder)null!).MapInvoke<Service>("a", null!);

sealed class Service
{
    public async ValueTask<int> HandleAsync(int value, CancellationToken cancellationToken)
    {
        await Task.Delay(TimeSpan.FromMilliseconds(500), cancellationToken);
        return value;
    }
}
""", /* lang=c#-test */
"""
// <auto-generated/>

namespace Tiger.Stripes;

/// <summary>Extensions to the functionality of the <see cref="global::Tiger.Stripes.IInvocationBuilder"/> interface.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("Tiger.Stripes.Experimental", "1.0.0.0")]
file static partial class InvocationBuilderExtensions
{
    [global::System.Runtime.CompilerServices.InterceptsLocationAttribute(1, "BsUJZ/OT6LNR/fToFxdGFnoAAABUZXN0MC5jcw==")] // /0/Test0.cs(6,33)
    public static global::Tiger.Stripes.IInvocationBuilder MapInvoke_0(
        this global::Tiger.Stripes.IInvocationBuilder builder,
        string name,
        global::System.Text.Json.Serialization.JsonSerializerContext serializerContext) => builder.MapInvoke(
            name,
            static (global::Service __service, int value, global::System.Threading.CancellationToken cancellationToken) => __service.HandleAsync(value, cancellationToken),
            serializerContext);

}
""");
        Add(/* lang=c#-test */
"""
using System;
using System.Threading;
using System.Threading.Tasks;
using Tiger.Stripes;

_ = ((IInvocationBuilder)null!).MapInvoke<Service>("a", null!);

sealed class Service
{
    public async Task<int> HandleAsync(int value, CancellationToken cancellationToken)
    {
        await Task.Delay(TimeSpan.FromMilliseconds(500), cancellationToken);
        return value;
    }
}
""", /* lang=c#-test */
"""
// <auto-generated/>

namespace Tiger.Stripes;

/// <summary>Extensions to the functionality of the <see cref="global::Tiger.Stripes.IInvocationBuilder"/> interface.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("Tiger.Stripes.Experimental", "1.0.0.0")]
file static partial class InvocationBuilderExtensions
{
    [global::System.Runtime.CompilerServices.InterceptsLocationAttribute(1, "b26NetXAzQOsvM2C+P+XfXoAAABUZXN0MC5jcw==")] // /0/Test0.cs(6,33)
    public static global::Tiger.Stripes.IInvocationBuilder MapInvoke_0(
        this global::Tiger.Stripes.IInvocationBuilder builder,
        string name,
        global::System.Text.Json.Serialization.JsonSerializerContext serializerContext) => builder.MapInvoke(
            name,
            static (global::Service __service, int value, global::System.Threading.CancellationToken cancellationToken) => __service.HandleAsync(value, cancellationToken),
            serializerContext);

}
""");
        Add(/* lang=c#-test */
    """
using System;
using System.Threading;
using System.Threading.Tasks;
using Tiger.Stripes;

_ = ((IInvocationBuilder)null!).MapInvoke<Service>("a", null!);

sealed class Service
{
    public int Handle(int value) => value;
}
""", /* lang=c#-test */
    """
// <auto-generated/>

namespace Tiger.Stripes;

/// <summary>Extensions to the functionality of the <see cref="global::Tiger.Stripes.IInvocationBuilder"/> interface.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("Tiger.Stripes.Experimental", "1.0.0.0")]
file static partial class InvocationBuilderExtensions
{
    [global::System.Runtime.CompilerServices.InterceptsLocationAttribute(1, "mdr76MHWH4IEFHXT+Fq6LnoAAABUZXN0MC5jcw==")] // /0/Test0.cs(6,33)
    public static global::Tiger.Stripes.IInvocationBuilder MapInvoke_0(
        this global::Tiger.Stripes.IInvocationBuilder builder,
        string name,
        global::System.Text.Json.Serialization.JsonSerializerContext serializerContext) => builder.MapInvoke(
            name,
            static (global::Service __service, int value) => __service.Handle(value),
            serializerContext);

}
""");
    }
}
